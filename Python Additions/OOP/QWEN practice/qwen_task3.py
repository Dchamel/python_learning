# –ó–∞–¥–∞—á–∞ 3 (–Ω–µ–º–Ω–æ–≥–æ —Å–ª–æ–∂–Ω–µ–µ): –ö–ª–∞—Å—Å "–¢–æ—á–∫–∞" (Point)
# –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å Point, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Ç–æ—á–∫—É –≤ –¥–≤—É–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.
#
# –ê—Ç—Ä–∏–±—É—Ç—ã: x, y
# –ú–µ—Ç–æ–¥—ã:
# __init__(self, x=0, y=0)
# move(self, dx, dy) ‚Äî –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç —Ç–æ—á–∫—É –Ω–∞ dx –ø–æ X –∏ dy –ø–æ Y
# distance_to(self, other_point) ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –¥—Ä—É–≥–æ–π —Ç–æ—á–∫–∏ (–ø–æ —Ñ–æ—Ä–º—É–ª–µ: ‚àö((x‚ÇÇ-x‚ÇÅ)¬≤ + (y‚ÇÇ-y‚ÇÅ)¬≤))
# __str__(self) ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: "–¢–æ—á–∫–∞(3, 4)"
# üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –¥–ª—è –∫–æ—Ä–Ω—è –∏—Å–ø–æ–ª—å–∑—É–π math.sqrt() –∏–ª–∏ ** 0.5.

class Point:
    def __init__(self, x=0, y=0):
        self.x = x
        self.y = y

    def __str__(self):
        return f'–¢–æ—á–∫–∞({self.x}, {self.y})'

    def move(self, dx, dy):
        self.x = self.x + dx
        self.y = self.y + dy

    def distance_to(self, other_point):
        return ((other_point.x - self.x) ** 2 + (other_point.y - self.y) ** 2) ** 0.5
